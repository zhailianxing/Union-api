package forecast

import (
	"fmt"
	"project/realapi/data/auction"
	"testing"
	"time"
)

//201607
var testData = []int{85400, 85400, 85400, 85400, 85400, 85400, 85400, 85400, 85400, 85500, 85500, 85600, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700,
	85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85700, 85800, 85800, 85800, 85900, 85900, 86000, 86000, 86000, 86100, 86100, 86200, 86300,
	86300, 86300, 86400, 86500, 86500, 86600, 86600, 86600, 86700, 86800, 86900, 86900, 87000, 87100, 87100, 87200, 87200}

//201606
//var testData = []int{
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83600,
//	83600,
//	83600,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83900,
//	83900,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84200,
//	84200,
//	84200,
//	84300,
//	84300,
//	84300,
//	84300,
//	84400,
//}

//201605
//var testData = []int{
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83900,
//	83900,
//	83900,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84100,
//	84100,
//	84200,
//	84300,
//	84300,
//	84300,
//	84400,
//	84400,
//	84400,
//	84500,
//	84500,
//	84600,
//	84700,
//	84800,
//	84900,
//	84900,
//	85000,
//}

//201604
//var testData = []int{
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83700,
//	83800,
//	83800,
//	83800,
//	83900,
//	83900,
//	83900,
//	83900,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84000,
//	84100,
//	84100,
//	84200,
//	84200,
//	84300,
//	84300,
//	84300,
//	84300,
//	84400,
//	84400,
//	84400,
//	84500,
//	84500,
//	84500,
//	84600,
//	84600,
//	84700,
//	84800,
//	84800,
//	84900,
//	85000,
//	85100,
//}

//201603
//var testData = []int{
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81600,
//	81600,
//	81600,
//	81700,
//	81700,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81900,
//	81900,
//	82000,
//	82000,
//	82100,
//	82100,
//	82100,
//	82100,
//	82100,
//	82100,
//	82100,
//	82200,
//	82200,
//	82200,
//	82300,
//	82400,
//	82400,
//	82500,
//	82500,
//	82600,
//	82700,
//	82800,
//	82800,
//	82900,
//	83000,
//	83000,
//	83000,
//	83000,
//	83100,
//	83100,
//}

//201602
//var testData = []int{
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81600,
//	81600,
//	81600,
//	81700,
//	81700,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81900,
//	81900,
//	82000,
//	82000,
//	82100,
//	82100,
//	82100,
//	82100,
//	82100,
//	82200,
//	82200,
//	82300,
//	82300,
//	82400,
//	82400,
//	82500,
//	82600,
//	82600,
//	82700,
//	82700,
//	82800,
//	82900,
//	83000,
//	83000,
//	83000,
//	83100,
//	83100,
//	83200,
//	83200,
//	83200,
//}

//201601
//var testData = []int{
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81500,
//	81600,
//	81600,
//	81600,
//	81600,
//	81600,
//	81700,
//	81700,
//	81700,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81800,
//	81900,
//	81900,
//	81900,
//	82000,
//	82000,
//	82000,
//	82100,
//	82100,
//	82100,
//	82100,
//	82200,
//	82200,
//	82200,
//	82200,
//	82200,
//	82200,
//	82200,
//}

//201512
//var testData = []int{
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83700,
//	83700,
//	83700,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83900,
//	83900,
//	83900,
//	84000,
//	84000,
//	84000,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84200,
//	84200,
//	84200,
//	84300,
//	84400,
//	84400,
//	84500,
//}

//201511
//var testData = []int{
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83500,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83600,
//	83700,
//	83700,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83800,
//	83900,
//	83900,
//	83900,
//	83900,
//	84000,
//	84000,
//	84000,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84100,
//	84200,
//	84200,
//	84300,
//	84300,
//	84300,
//	84400,
//	84500,
//	84500,
//	84600,
//	84600,
//}

func TestStartRecord(t *testing.T) {

	timeNow := time.Now()
	start := timeNow.Unix()
	end := timeNow.Add(60 * time.Second).Unix()

	handle := func() int {
		index := time.Now().Unix() - timeNow.Unix()
		data := testData[index]
		return data
	}

	go StartRecord(start, end, handle)

	for i := 0; i < 70; i++ {
		<-time.After(200 * time.Millisecond)
		price := auction.GetForecastPrice()
		fmt.Println("result is :", i, price)
		<-time.After(800 * time.Millisecond)
	}
}
